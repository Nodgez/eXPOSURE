//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input Schemes/PlayerInputScheme.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputScheme: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputScheme()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputScheme"",
    ""maps"": [
        {
            ""name"": ""Player Navigation"",
            ""id"": ""65b04b8d-2670-4fd5-af61-ea55adbf779a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""3d30c31f-9228-4287-9208-80b6f8e60b12"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""1760822b-e53b-4b96-8c39-3a3fc448e639"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DropPickup"",
                    ""type"": ""Button"",
                    ""id"": ""deb916d4-bc40-46cd-9f5b-cc53afdb81ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""1c9e17c7-4028-441d-8dd2-1c4d2723b195"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""70f69ed0-1cf3-43b8-a4a9-e172dbe366bb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""306820e2-8394-4e3b-be32-1892d4f16e44"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""86817f9d-a8e0-4e6e-9a11-b963aa56f125"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""973c6fc4-adcf-44c0-8518-921d54f79ee8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2b71a17f-206f-4965-8a92-2fef5b6bba35"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5850a56-ffa5-4c6e-a983-3b62fcc24cbf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97375da4-9aee-49bc-a034-78f7a7e8e5ee"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fb3982f-f540-44dc-bac6-027b689f67de"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropPickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fe2fb996-7371-4cf6-9adf-8eb742d940f6"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropPickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Navigation
        m_PlayerNavigation = asset.FindActionMap("Player Navigation", throwIfNotFound: true);
        m_PlayerNavigation_Movement = m_PlayerNavigation.FindAction("Movement", throwIfNotFound: true);
        m_PlayerNavigation_Dash = m_PlayerNavigation.FindAction("Dash", throwIfNotFound: true);
        m_PlayerNavigation_DropPickup = m_PlayerNavigation.FindAction("DropPickup", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Navigation
    private readonly InputActionMap m_PlayerNavigation;
    private List<IPlayerNavigationActions> m_PlayerNavigationActionsCallbackInterfaces = new List<IPlayerNavigationActions>();
    private readonly InputAction m_PlayerNavigation_Movement;
    private readonly InputAction m_PlayerNavigation_Dash;
    private readonly InputAction m_PlayerNavigation_DropPickup;
    public struct PlayerNavigationActions
    {
        private @PlayerInputScheme m_Wrapper;
        public PlayerNavigationActions(@PlayerInputScheme wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerNavigation_Movement;
        public InputAction @Dash => m_Wrapper.m_PlayerNavigation_Dash;
        public InputAction @DropPickup => m_Wrapper.m_PlayerNavigation_DropPickup;
        public InputActionMap Get() { return m_Wrapper.m_PlayerNavigation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerNavigationActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerNavigationActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerNavigationActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerNavigationActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @DropPickup.started += instance.OnDropPickup;
            @DropPickup.performed += instance.OnDropPickup;
            @DropPickup.canceled += instance.OnDropPickup;
        }

        private void UnregisterCallbacks(IPlayerNavigationActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @DropPickup.started -= instance.OnDropPickup;
            @DropPickup.performed -= instance.OnDropPickup;
            @DropPickup.canceled -= instance.OnDropPickup;
        }

        public void RemoveCallbacks(IPlayerNavigationActions instance)
        {
            if (m_Wrapper.m_PlayerNavigationActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerNavigationActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerNavigationActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerNavigationActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerNavigationActions @PlayerNavigation => new PlayerNavigationActions(this);
    public interface IPlayerNavigationActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnDropPickup(InputAction.CallbackContext context);
    }
}
